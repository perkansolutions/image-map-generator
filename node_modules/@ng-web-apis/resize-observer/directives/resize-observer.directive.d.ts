import { ElementRef } from '@angular/core';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
/**
 * @deprecated View Engine legacy
 * TODO: use arrow function for `useFactory` and delete this exported function in future major release
 */
export declare function boxExtractor({ nativeElement, }: ElementRef<Element>): ResizeObserverBoxOptions;
/**
 * @deprecated View Engine legacy
 * TODO: use arrow function for `useFactory` and delete this exported function in future major release
 */
export declare function boxFactory(box: ResizeObserverBoxOptions | null): ResizeObserverBoxOptions;
export declare class ResizeObserverDirective {
    readonly waResizeObserver: Observable<ResizeObserverEntry[]>;
    constructor(waResizeObserver: Observable<ResizeObserverEntry[]>, _box: ResizeObserverBoxOptions);
    static ɵfac: i0.ɵɵFactoryDeclaration<ResizeObserverDirective, [null, { attribute: "waResizeBox"; }]>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<ResizeObserverDirective, "[waResizeObserver]", never, {}, { "waResizeObserver": "waResizeObserver"; }, never>;
}

{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, NgZone, Injectable, Inject, Directive, Attribute, NgModule } from '@angular/core';\nimport * as i1 from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport { WINDOW } from '@ng-web-apis/common';\nconst RESIZE_OPTION_BOX_DEFAULT = 'content-box';\nconst RESIZE_OPTION_BOX = new InjectionToken('Box model to observe changes', {\n  providedIn: 'root',\n  factory: () => RESIZE_OPTION_BOX_DEFAULT\n});\nconst RESIZE_OBSERVER_SUPPORT = new InjectionToken('Resize Observer API support', {\n  providedIn: 'root',\n  factory: () => !!inject(WINDOW).ResizeObserver\n});\nlet ResizeObserverService = /*#__PURE__*/(() => {\n  class ResizeObserverService extends Observable {\n    constructor({\n      nativeElement\n    }, ngZone, support, box) {\n      let observer;\n      super(subscriber => {\n        if (!support) {\n          subscriber.error('ResizeObserver is not supported in your browser');\n          return;\n        }\n        observer = new ResizeObserver(entries => {\n          ngZone.run(() => {\n            subscriber.next(entries);\n          });\n        });\n        observer.observe(nativeElement, {\n          box\n        });\n        return () => {\n          observer.disconnect();\n        };\n      });\n      return this.pipe(share());\n    }\n  }\n  ResizeObserverService.ɵfac = function ResizeObserverService_Factory(t) {\n    return new (t || ResizeObserverService)(i0.ɵɵinject(ElementRef), i0.ɵɵinject(NgZone), i0.ɵɵinject(RESIZE_OBSERVER_SUPPORT), i0.ɵɵinject(RESIZE_OPTION_BOX));\n  };\n  ResizeObserverService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ResizeObserverService,\n    factory: ResizeObserverService.ɵfac\n  });\n  return ResizeObserverService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @deprecated View Engine legacy\n * TODO: use arrow function for `useFactory` and delete this exported function in future major release\n */\n// TODO switch to Attribute once https://github.com/angular/angular/issues/36479 is fixed\nfunction boxExtractor({\n  nativeElement\n}) {\n  const attribute = nativeElement.getAttribute('waResizeBox');\n  return boxFactory(attribute);\n}\n/**\n * @deprecated View Engine legacy\n * TODO: use arrow function for `useFactory` and delete this exported function in future major release\n */\nfunction boxFactory(box) {\n  return box || RESIZE_OPTION_BOX_DEFAULT;\n}\nlet ResizeObserverDirective = /*#__PURE__*/(() => {\n  class ResizeObserverDirective {\n    constructor(waResizeObserver, _box) {\n      this.waResizeObserver = waResizeObserver;\n    }\n  }\n  ResizeObserverDirective.ɵfac = function ResizeObserverDirective_Factory(t) {\n    return new (t || ResizeObserverDirective)(i0.ɵɵdirectiveInject(ResizeObserverService), i0.ɵɵinjectAttribute('waResizeBox'));\n  };\n  ResizeObserverDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: ResizeObserverDirective,\n    selectors: [[\"\", \"waResizeObserver\", \"\"]],\n    outputs: {\n      waResizeObserver: \"waResizeObserver\"\n    },\n    features: [i0.ɵɵProvidersFeature([ResizeObserverService, {\n      provide: RESIZE_OPTION_BOX,\n      deps: [ElementRef],\n      useFactory: boxExtractor\n    }])]\n  });\n  return ResizeObserverDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ResizeObserverModule = /*#__PURE__*/(() => {\n  class ResizeObserverModule {}\n  ResizeObserverModule.ɵfac = function ResizeObserverModule_Factory(t) {\n    return new (t || ResizeObserverModule)();\n  };\n  ResizeObserverModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: ResizeObserverModule\n  });\n  ResizeObserverModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n  return ResizeObserverModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Public API Surface of @ng-web-apis/resize-observer\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RESIZE_OBSERVER_SUPPORT, RESIZE_OPTION_BOX, RESIZE_OPTION_BOX_DEFAULT, ResizeObserverDirective, ResizeObserverModule, ResizeObserverService, boxExtractor, boxFactory };\n//# sourceMappingURL=ng-web-apis-resize-observer.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}